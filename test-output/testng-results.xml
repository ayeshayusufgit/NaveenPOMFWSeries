<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="19" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Demo Cart Test automtion regression suite" duration-ms="33394" started-at="2021-01-22T16:16:11Z" finished-at="2021-01-22T16:16:44Z">
    <groups>
    </groups>
    <test name="Login page Test" duration-ms="31657" started-at="2021-01-22T16:16:11Z" finished-at="2021-01-22T16:16:42Z">
      <class name="com.qa.democart.test.LoginPageTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.democart.test.LoginPageTest@417d6615]" name="setUp" is-config="true" duration-ms="14684" started-at="2021-01-22T16:16:11Z" finished-at="2021-01-22T16:16:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyLoginPageTitleTest()[pri:1, instance:com.qa.democart.test.LoginPageTest@417d6615]" name="verifyLoginPageTitleTest" duration-ms="160" started-at="2021-01-22T16:16:26Z" finished-at="2021-01-22T16:16:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginPageTitleTest -->
        <test-method status="PASS" signature="verifyForgotPasswordLinkTest()[pri:2, instance:com.qa.democart.test.LoginPageTest@417d6615]" name="verifyForgotPasswordLinkTest" duration-ms="84" started-at="2021-01-22T16:16:26Z" finished-at="2021-01-22T16:16:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgotPasswordLinkTest -->
        <test-method status="PASS" signature="loginNegativeTest(java.lang.String, java.lang.String)[pri:3, instance:com.qa.democart.test.LoginPageTest@417d6615]" name="loginNegativeTest" duration-ms="1938" started-at="2021-01-22T16:16:27Z" data-provider="getLoginData" finished-at="2021-01-22T16:16:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegativeTest -->
        <test-method status="PASS" signature="loginNegativeTest(java.lang.String, java.lang.String)[pri:3, instance:com.qa.democart.test.LoginPageTest@417d6615]" name="loginNegativeTest" duration-ms="1867" started-at="2021-01-22T16:16:29Z" data-provider="getLoginData" finished-at="2021-01-22T16:16:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ayesha.yusuf10@tathastu.ai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegativeTest -->
        <test-method status="PASS" signature="loginNegativeTest(java.lang.String, java.lang.String)[pri:3, instance:com.qa.democart.test.LoginPageTest@417d6615]" name="loginNegativeTest" duration-ms="1844" started-at="2021-01-22T16:16:31Z" data-provider="getLoginData" finished-at="2021-01-22T16:16:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegativeTest -->
        <test-method status="PASS" signature="loginNegativeTest(java.lang.String, java.lang.String)[pri:3, instance:com.qa.democart.test.LoginPageTest@417d6615]" name="loginNegativeTest" duration-ms="1806" started-at="2021-01-22T16:16:33Z" data-provider="getLoginData" finished-at="2021-01-22T16:16:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ayesha.yusuf10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegativeTest -->
        <test-method status="PASS" signature="loginNegativeTest(java.lang.String, java.lang.String)[pri:3, instance:com.qa.democart.test.LoginPageTest@417d6615]" name="loginNegativeTest" duration-ms="2257" started-at="2021-01-22T16:16:35Z" data-provider="getLoginData" finished-at="2021-01-22T16:16:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#4@%]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[^!@##]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegativeTest -->
        <test-method status="PASS" signature="loginNegativeTest(java.lang.String, java.lang.String)[pri:3, instance:com.qa.democart.test.LoginPageTest@417d6615]" name="loginNegativeTest" duration-ms="1884" started-at="2021-01-22T16:16:37Z" data-provider="getLoginData" finished-at="2021-01-22T16:16:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ayesha.yusuf10@tathastu.ai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegativeTest -->
        <test-method status="PASS" signature="loginTest()[pri:4, instance:com.qa.democart.test.LoginPageTest@417d6615]" name="loginTest" duration-ms="2749" started-at="2021-01-22T16:16:39Z" finished-at="2021-01-22T16:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.qa.democart.test.LoginPageTest@417d6615]" name="tearDown" is-config="true" duration-ms="682" started-at="2021-01-22T16:16:42Z" finished-at="2021-01-22T16:16:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.democart.test.LoginPageTest -->
    </test> <!-- Login page Test -->
    <test name="Accounts page Test" duration-ms="33394" started-at="2021-01-22T16:16:11Z" finished-at="2021-01-22T16:16:44Z">
      <class name="com.qa.democart.test.AccountsPageTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="setUp" is-config="true" duration-ms="14659" started-at="2021-01-22T16:16:11Z" finished-at="2021-01-22T16:16:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="accountsPageSetup()[pri:0, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="accountsPageSetup" is-config="true" duration-ms="3067" started-at="2021-01-22T16:16:26Z" finished-at="2021-01-22T16:16:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountsPageSetup -->
        <test-method status="PASS" signature="accountsPageTitleTest()[pri:1, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="accountsPageTitleTest" duration-ms="19" started-at="2021-01-22T16:16:29Z" finished-at="2021-01-22T16:16:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountsPageTitleTest -->
        <test-method status="PASS" signature="accountsPageHeaderTest()[pri:2, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="accountsPageHeaderTest" duration-ms="89" started-at="2021-01-22T16:16:29Z" finished-at="2021-01-22T16:16:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountsPageHeaderTest -->
        <test-method status="PASS" signature="accountPageSectionCountTest()[pri:3, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="accountPageSectionCountTest" duration-ms="20" started-at="2021-01-22T16:16:29Z" finished-at="2021-01-22T16:16:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountPageSectionCountTest -->
        <test-method status="PASS" signature="accountPageSectionTextTest()[pri:4, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="accountPageSectionTextTest" duration-ms="77" started-at="2021-01-22T16:16:29Z" finished-at="2021-01-22T16:16:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountPageSectionTextTest -->
        <test-method status="PASS" signature="searchTest(java.lang.String)[pri:5, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="searchTest" duration-ms="2633" started-at="2021-01-22T16:16:29Z" data-provider="getProductSearchData" finished-at="2021-01-22T16:16:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[iMac]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method status="PASS" signature="searchTest(java.lang.String)[pri:5, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="searchTest" duration-ms="2543" started-at="2021-01-22T16:16:32Z" data-provider="getProductSearchData" finished-at="2021-01-22T16:16:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Macbook]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method status="PASS" signature="searchTest(java.lang.String)[pri:5, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="searchTest" duration-ms="2399" started-at="2021-01-22T16:16:34Z" data-provider="getProductSearchData" finished-at="2021-01-22T16:16:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[iPhone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method status="FAIL" signature="searchTest(java.lang.String)[pri:5, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="searchTest" duration-ms="1671" started-at="2021-01-22T16:16:36Z" data-provider="getProductSearchData" finished-at="2021-01-22T16:16:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Shoes]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.qa.democart.test.AccountsPageTest.searchTest(AccountsPageTest.java:77)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method status="FAIL" signature="searchTest(java.lang.String)[pri:5, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="searchTest" duration-ms="1579" started-at="2021-01-22T16:16:39Z" data-provider="getProductSearchData" finished-at="2021-01-22T16:16:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mouse]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.qa.democart.test.AccountsPageTest.searchTest(AccountsPageTest.java:77)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method status="FAIL" signature="searchTest(java.lang.String)[pri:5, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="searchTest" duration-ms="1524" started-at="2021-01-22T16:16:41Z" data-provider="getProductSearchData" finished-at="2021-01-22T16:16:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Keyboard]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.qa.democart.test.AccountsPageTest.searchTest(AccountsPageTest.java:77)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.qa.democart.test.AccountsPageTest@562c877a]" name="tearDown" is-config="true" duration-ms="646" started-at="2021-01-22T16:16:44Z" finished-at="2021-01-22T16:16:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.democart.test.AccountsPageTest -->
    </test> <!-- Accounts page Test -->
  </suite> <!-- Demo Cart Test automtion regression suite -->
</testng-results>
