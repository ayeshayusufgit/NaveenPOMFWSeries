<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="19" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Demo Cart Test automtion regression suite" duration-ms="25964" started-at="2021-01-18T15:44:57Z" finished-at="2021-01-18T15:45:23Z">
    <groups>
    </groups>
    <test name="Accounts page Test" duration-ms="24713" started-at="2021-01-18T15:44:57Z" finished-at="2021-01-18T15:45:22Z">
      <class name="com.qa.democart.test.AccountsPageTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="setUp" is-config="true" duration-ms="9325" started-at="2021-01-18T15:44:57Z" finished-at="2021-01-18T15:45:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="accountsPageSetup()[pri:0, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="accountsPageSetup" is-config="true" duration-ms="2929" started-at="2021-01-18T15:45:06Z" finished-at="2021-01-18T15:45:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountsPageSetup -->
        <test-method status="PASS" signature="accountsPageTitleTest()[pri:1, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="accountsPageTitleTest" duration-ms="17" started-at="2021-01-18T15:45:09Z" finished-at="2021-01-18T15:45:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountsPageTitleTest -->
        <test-method status="PASS" signature="accountsPageHeaderTest()[pri:2, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="accountsPageHeaderTest" duration-ms="104" started-at="2021-01-18T15:45:09Z" finished-at="2021-01-18T15:45:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountsPageHeaderTest -->
        <test-method status="PASS" signature="accountPageSectionCountTest()[pri:3, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="accountPageSectionCountTest" duration-ms="17" started-at="2021-01-18T15:45:09Z" finished-at="2021-01-18T15:45:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountPageSectionCountTest -->
        <test-method status="PASS" signature="accountPageSectionTextTest()[pri:4, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="accountPageSectionTextTest" duration-ms="92" started-at="2021-01-18T15:45:09Z" finished-at="2021-01-18T15:45:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountPageSectionTextTest -->
        <test-method status="PASS" signature="searchTest(java.lang.String)[pri:5, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="searchTest" duration-ms="1821" started-at="2021-01-18T15:45:10Z" data-provider="getProductSearchData" finished-at="2021-01-18T15:45:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[iMac]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method status="PASS" signature="searchTest(java.lang.String)[pri:5, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="searchTest" duration-ms="1591" started-at="2021-01-18T15:45:11Z" data-provider="getProductSearchData" finished-at="2021-01-18T15:45:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Macbook]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method status="PASS" signature="searchTest(java.lang.String)[pri:5, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="searchTest" duration-ms="1582" started-at="2021-01-18T15:45:13Z" data-provider="getProductSearchData" finished-at="2021-01-18T15:45:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[iPhone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method status="FAIL" signature="searchTest(java.lang.String)[pri:5, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="searchTest" duration-ms="1509" started-at="2021-01-18T15:45:15Z" data-provider="getProductSearchData" finished-at="2021-01-18T15:45:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Shoes]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.qa.democart.test.AccountsPageTest.searchTest(AccountsPageTest.java:77)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method status="FAIL" signature="searchTest(java.lang.String)[pri:5, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="searchTest" duration-ms="1566" started-at="2021-01-18T15:45:17Z" data-provider="getProductSearchData" finished-at="2021-01-18T15:45:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mouse]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.qa.democart.test.AccountsPageTest.searchTest(AccountsPageTest.java:77)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method status="FAIL" signature="searchTest(java.lang.String)[pri:5, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="searchTest" duration-ms="1518" started-at="2021-01-18T15:45:19Z" data-provider="getProductSearchData" finished-at="2021-01-18T15:45:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Keyboard]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at com.qa.democart.test.AccountsPageTest.searchTest(AccountsPageTest.java:77)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.qa.democart.test.AccountsPageTest@67001148]" name="tearDown" is-config="true" duration-ms="653" started-at="2021-01-18T15:45:21Z" finished-at="2021-01-18T15:45:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.democart.test.AccountsPageTest -->
    </test> <!-- Accounts page Test -->
    <test name="Login page Test" duration-ms="25964" started-at="2021-01-18T15:44:57Z" finished-at="2021-01-18T15:45:23Z">
      <class name="com.qa.democart.test.LoginPageTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.democart.test.LoginPageTest@7a6ebe1e]" name="setUp" is-config="true" duration-ms="9376" started-at="2021-01-18T15:44:57Z" finished-at="2021-01-18T15:45:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="verifyLoginPageTitleTest()[pri:1, instance:com.qa.democart.test.LoginPageTest@7a6ebe1e]" name="verifyLoginPageTitleTest" duration-ms="170" started-at="2021-01-18T15:45:06Z" finished-at="2021-01-18T15:45:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginPageTitleTest -->
        <test-method status="PASS" signature="verifyForgotPasswordLinkTest()[pri:2, instance:com.qa.democart.test.LoginPageTest@7a6ebe1e]" name="verifyForgotPasswordLinkTest" duration-ms="73" started-at="2021-01-18T15:45:07Z" finished-at="2021-01-18T15:45:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyForgotPasswordLinkTest -->
        <test-method status="PASS" signature="loginNegativeTest(java.lang.String, java.lang.String)[pri:3, instance:com.qa.democart.test.LoginPageTest@7a6ebe1e]" name="loginNegativeTest" duration-ms="1878" started-at="2021-01-18T15:45:08Z" data-provider="getLoginData" finished-at="2021-01-18T15:45:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegativeTest -->
        <test-method status="PASS" signature="loginNegativeTest(java.lang.String, java.lang.String)[pri:3, instance:com.qa.democart.test.LoginPageTest@7a6ebe1e]" name="loginNegativeTest" duration-ms="1896" started-at="2021-01-18T15:45:10Z" data-provider="getLoginData" finished-at="2021-01-18T15:45:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ayesha.yusuf10@tathastu.ai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegativeTest -->
        <test-method status="PASS" signature="loginNegativeTest(java.lang.String, java.lang.String)[pri:3, instance:com.qa.democart.test.LoginPageTest@7a6ebe1e]" name="loginNegativeTest" duration-ms="1843" started-at="2021-01-18T15:45:12Z" data-provider="getLoginData" finished-at="2021-01-18T15:45:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegativeTest -->
        <test-method status="PASS" signature="loginNegativeTest(java.lang.String, java.lang.String)[pri:3, instance:com.qa.democart.test.LoginPageTest@7a6ebe1e]" name="loginNegativeTest" duration-ms="1842" started-at="2021-01-18T15:45:14Z" data-provider="getLoginData" finished-at="2021-01-18T15:45:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ayesha.yusuf10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegativeTest -->
        <test-method status="PASS" signature="loginNegativeTest(java.lang.String, java.lang.String)[pri:3, instance:com.qa.democart.test.LoginPageTest@7a6ebe1e]" name="loginNegativeTest" duration-ms="1872" started-at="2021-01-18T15:45:16Z" data-provider="getLoginData" finished-at="2021-01-18T15:45:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#4@%]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[^!@##]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegativeTest -->
        <test-method status="PASS" signature="loginNegativeTest(java.lang.String, java.lang.String)[pri:3, instance:com.qa.democart.test.LoginPageTest@7a6ebe1e]" name="loginNegativeTest" duration-ms="1868" started-at="2021-01-18T15:45:17Z" data-provider="getLoginData" finished-at="2021-01-18T15:45:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ayesha.yusuf10@tathastu.ai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegativeTest -->
        <test-method status="PASS" signature="loginTest()[pri:4, instance:com.qa.democart.test.LoginPageTest@7a6ebe1e]" name="loginTest" duration-ms="2740" started-at="2021-01-18T15:45:19Z" finished-at="2021-01-18T15:45:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.qa.democart.test.LoginPageTest@7a6ebe1e]" name="tearDown" is-config="true" duration-ms="666" started-at="2021-01-18T15:45:22Z" finished-at="2021-01-18T15:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.democart.test.LoginPageTest -->
    </test> <!-- Login page Test -->
  </suite> <!-- Demo Cart Test automtion regression suite -->
</testng-results>
